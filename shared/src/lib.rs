use glam::IVec2;
use serde::{Deserialize, Serialize};
use uuid::Uuid;
use slotmap::DefaultKey;

#[derive(Clone, Serialize, Deserialize)]
pub enum Message {
    JoinAsPlayer {
        /// player id, generated by player
        id:Uuid,
        /// self chosen name of the player
        name:String
    },
    WelcomePlayer {
        your_entity:u64
    },
    TileUpdate {
        /// pos of the tile
        pos:IVec2,
        /// if the tile is a wall
        wall:Option<bool>,
        /// if the tile is visible
        visible:Option<bool>
    },
    ThingUpdate {
        /// id of the thing
        id:DefaultKey,

        /// position of the thing
        pos:Option<IVec2>,

        /// classes of the thing
        classes:Option<String>,

        /// if the thing is visible or not
        visible:Option<bool>
    }
}
//impl netcode::Msg for Message {};